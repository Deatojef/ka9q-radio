.TH "/Users/karn/src/ka9q-radio/pcmrecord.c" 3 "KA9Q-Radio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/karn/src/ka9q-radio/pcmrecord.c \- Record, stream, or launch commands with RTP streams as input\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <assert\&.h>\fP
.br
\fR#include <errno\&.h>\fP
.br
\fR#include <limits\&.h>\fP
.br
\fR#include <string\&.h>\fP
.br
\fR#include <stdio\&.h>\fP
.br
\fR#include <unistd\&.h>\fP
.br
\fR#include <fcntl\&.h>\fP
.br
\fR#include <sys/stat\&.h>\fP
.br
\fR#include <poll\&.h>\fP
.br
\fR#include <sysexits\&.h>\fP
.br
\fR#include <signal\&.h>\fP
.br
\fR#include <getopt\&.h>\fP
.br
\fR#include <inttypes\&.h>\fP
.br
\fR#include <ogg/ogg\&.h>\fP
.br
\fR#include 'misc\&.h'\fP
.br
\fR#include 'attr\&.h'\fP
.br
\fR#include 'multicast\&.h'\fP
.br
\fR#include 'radio\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBwav\fP"
.br
.ti -1c
.RI "struct \fBsession\fP"
.br
.ti -1c
.RI "struct \fBsession::reseq\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_GNU_SOURCE\fP   1"
.br
.ti -1c
.RI "#define \fBbswap_16\fP(value)   ((((value) & 0xff) << 8) | ((value) >> 8))"
.br
.ti -1c
.RI "#define \fBBUFFERSIZE\fP   (8192)"
.br
.ti -1c
.RI "#define \fBRESEQ\fP   64"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsession_file_init\fP (struct \fBsession\fP *sp, struct sockaddr const *sender)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBVerbose\fP"
.br
.ti -1c
.RI "const char * \fBApp_path\fP"
.br
.ti -1c
.RI "int \fBMcast_ttl\fP"
.br
.ti -1c
.RI "struct sockaddr_storage \fBMetadata_dest_socket\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Record, stream, or launch commands with RTP streams as input\&. 


.PP
\fBAuthor\fP
.RS 4
Phil Karn, KA9Q 
.PP
.nf
This program reads one or more RTP streams from a multicast group and either writes them into a file, streams (one of them) onto standard output, or invokes a command for each stream and pipes the RTP data into it\&. PCM streams are written as-is (except that big-endian PCM is converted to little-endian)\&. Opus streams are placed in a standard Ogg container\&.

Command-line options:
 --stdout | --catmode | -c: write one stream to stdout\&. If --ssrc is not specified, selects the first one found and ignores the rest
 --directory | -d <directory>: directory root in which to write files<
 --exec | -e '<command args \&.\&.\&.>': Execute the specified command for each stream and pipe to it\&. Several macros expanded as shown when found in the arguments:
        $$: insert a literal '$'
        $d: description string from the radiod front end
        $h: receive frequency in decimal hertz
        $k: receive frequency in decimal kilohertz
        $m: receive frequency in decimal megahertz
        $c: number of channels (1 or 2)
        $r: sample rate, integer Hz
        $s: ssrc (unsigned decimal integer)

 --flush|-f: Flush after each received packet\&. Increases Ogg container overhead; little need for this writing files
 --jt|-j: Use K1JT format file names
 --locale <locale>: Set locale\&. Default is $LANG
 --mintime|--minfiletime|-m: minimum file duration, in sec\&. Files shorter than this are deleted when closed
 --raw|-r: Don't emit \&.WAV header for PCM files; ignored with Opus (Ogg is needed to delimit frames in a stream)
 --subdirectories|--subdirs|-s': Create subdirectories when writing files: ssrc/year/month/day/filename
 --timeout|-t <seconds>: Close file after idle period (default 20 sec)
 --verbose|-v: Increase verbosity level
 --lengthlimit|--limit|-L <seconds>: maximum file duration, seconds\&. When new file is created, round down to previous start of interval and pad with silence (for JT decoding)
 --ssrc <ssrc>: Select one SSRC (recommended for --stdout)
 --version|-V: display command version

.fi
.PP
 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for KA9Q-Radio from the source code\&.
