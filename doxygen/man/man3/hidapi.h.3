.TH "/Users/karn/src/ka9q-radio/hidapi.h" 3 "KA9Q-Radio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/karn/src/ka9q-radio/hidapi.h
.SH SYNOPSIS
.br
.PP
\fR#include <wchar\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBhid_device_info\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBhid_device_\fP \fBhid_device\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhid_init\fP (void)"
.br
.RI "Initialize the HIDAPI library\&. "
.ti -1c
.RI "int \fBhid_exit\fP (void)"
.br
.RI "Finalize the HIDAPI library\&. "
.ti -1c
.RI "struct \fBhid_device_info\fP * \fBhid_enumerate\fP (unsigned short vendor_id, unsigned short product_id)"
.br
.RI "Enumerate the HID Devices\&. "
.ti -1c
.RI "void \fBhid_free_enumeration\fP (struct \fBhid_device_info\fP *devs)"
.br
.RI "Free an enumeration Linked List\&. "
.ti -1c
.RI "\fBhid_device\fP * \fBhid_open\fP (unsigned short vendor_id, unsigned short product_id, const wchar_t *serial_number)"
.br
.RI "Open a HID device using a Vendor ID (VID), Product ID (PID) and optionally a serial number\&. "
.ti -1c
.RI "\fBhid_device\fP * \fBhid_open_path\fP (const char *path)"
.br
.RI "Open a HID device by its path name\&. "
.ti -1c
.RI "int \fBhid_write\fP (\fBhid_device\fP *device, const unsigned char *data, size_t length)"
.br
.RI "Write an Output report to a HID device\&. "
.ti -1c
.RI "int \fBhid_read_timeout\fP (\fBhid_device\fP *dev, unsigned char *data, size_t length, int milliseconds)"
.br
.RI "Read an Input report from a HID device with timeout\&. "
.ti -1c
.RI "int \fBhid_read\fP (\fBhid_device\fP *device, unsigned char *data, size_t length)"
.br
.RI "Read an Input report from a HID device\&. "
.ti -1c
.RI "int \fBhid_set_nonblocking\fP (\fBhid_device\fP *device, int nonblock)"
.br
.RI "Set the device handle to be non-blocking\&. "
.ti -1c
.RI "int \fBhid_send_feature_report\fP (\fBhid_device\fP *device, const unsigned char *data, size_t length)"
.br
.RI "Send a Feature report to the device\&. "
.ti -1c
.RI "int \fBhid_get_feature_report\fP (\fBhid_device\fP *device, unsigned char *data, size_t length)"
.br
.RI "Get a feature report from a HID device\&. "
.ti -1c
.RI "void \fBhid_close\fP (\fBhid_device\fP *device)"
.br
.RI "Close a HID device\&. "
.ti -1c
.RI "int \fBhid_get_manufacturer_string\fP (\fBhid_device\fP *device, wchar_t *string, size_t maxlen)"
.br
.RI "Get The Manufacturer String from a HID device\&. "
.ti -1c
.RI "int \fBhid_get_product_string\fP (\fBhid_device\fP *device, wchar_t *string, size_t maxlen)"
.br
.RI "Get The Product String from a HID device\&. "
.ti -1c
.RI "int \fBhid_get_serial_number_string\fP (\fBhid_device\fP *device, wchar_t *string, size_t maxlen)"
.br
.RI "Get The Serial Number String from a HID device\&. "
.ti -1c
.RI "int \fBhid_get_indexed_string\fP (\fBhid_device\fP *device, int string_index, wchar_t *string, size_t maxlen)"
.br
.RI "Get a string from a HID device, based on its string index\&. "
.ti -1c
.RI "const wchar_t * \fBhid_error\fP (\fBhid_device\fP *device)"
.br
.RI "Get a string describing the last error which occurred\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBhid_device_\fP \fBhid_device\fP"
opaque hidapi structure 
.SH "Author"
.PP 
Generated automatically by Doxygen for KA9Q-Radio from the source code\&.
